plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
    id 'io.github.juuxel.loom-quiltflower' version '1.7.1' apply false
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.juuxel.loom-quiltflower"
    apply plugin: "com.matthewprenger.cursegradle"
    apply plugin: "com.modrinth.minotaur"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            it.parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}")
            it.officialMojangMappings {
                setNameSyntheticMembers(false)
            }
        }
    }

    var env = System.getenv()
    var modLoader = name

    var changelogFile = rootProject.file("changelog.md")
    var changelogText = changelogFile.exists() ? changelogFile.text : ""

    if (env.MODRINTH_TOKEN) {
        modrinth {
            projectId = "heartstone"
            uploadFile = tasks.remapJar
            gameVersions = [rootProject.minecraft_version]
            loaders = [modLoader]
            changelog = changelogText

            if (modLoader == "fabric") {
                dependencies {
                    required.project "fabric-api"
                    required.project "moonlight"
                }
            } else {
                dependencies {
                    required.project "moonlight"
                }
            }
        }
    }

    if (env.CURSEFORGE_TOKEN) {
        curseforge {
            apiKey = env.CURSEFORGE_TOKEN
            project {
                id = rootProject.project_id
                changelog = changelogText
                releaseType = 'release'
                addGameVersion rootProject.minecraft_version
                addGameVersion modLoader.capitalize()

                mainArtifact(tasks.remapJar)

                if (modLoader == "fabric") {
                    relations {
                        requiredDependency "fabric-api"
                        requiredDependency "selene"

                        optionalDependency("sleep-tight")
                    }
                } else {
                    relations {
                        requiredDependency("selene")
                        optionalDependency("sleep-tight")
                    }
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.mod_id
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {

        flatDir {
            dirs 'mods'
        }

        mavenLocal()

        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url "https://maven.parchmentmc.org" }

        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
        maven { url = "https://mvn.devos.one/snapshots/" }

        maven { url = "https://jitpack.io/" } // for Porting Lib: Mixin Extras, Fabric ASM
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
